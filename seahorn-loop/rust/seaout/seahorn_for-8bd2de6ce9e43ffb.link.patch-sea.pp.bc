; ModuleID = '/home/sflur/workspace/rust-verification/rust-verification-tools/demos/bottlenecks/seahorn-for/target/x86_64-unknown-linux-gnu/debug/deps/seahorn_for-8bd2de6ce9e43ffb.link.patch-sea.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@_ZN3std3sys4unix4args3imp15ARGV_INIT_ARRAY17h78d791bf10915891E = internal constant <{ i8*, [0 x i8] }> <{ i8* bitcast (void (i32, i8**, i8**)* @_ZN3std3sys4unix4args3imp15ARGV_INIT_ARRAY12init_wrapper17hac2c035213cf4e54E.stub to i8*), [0 x i8] zeroinitializer }>, section ".init_array.00099", align 8
@llvm.used = appending global [5 x i8*] [i8* bitcast (<{ i8*, [0 x i8] }>* @_ZN3std3sys4unix4args3imp15ARGV_INIT_ARRAY17h78d791bf10915891E to i8*), i8* bitcast (void ()* @seahorn.fail to i8*), i8* bitcast (void (i1)* @verifier.assume to i8*), i8* bitcast (void (i1)* @verifier.assume.not to i8*), i8* bitcast (void ()* @verifier.error to i8*)], section "llvm.metadata"

; Function Attrs: nounwind nonlazybind uwtable
declare dso_local void @_ZN3std3sys4unix4args3imp15ARGV_INIT_ARRAY12init_wrapper17hac2c035213cf4e54E.stub(i32, i8**, i8** nocapture readnone) unnamed_addr #0

; Function Attrs: norecurse nounwind nonlazybind readnone
declare dso_local void @rust_eh_personality.stub() unnamed_addr #1

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind nonlazybind
declare i32 @__VERIFIER_nondet_i32() unnamed_addr #4

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.expect.i1(i1, i1) #5

define i32 @main() local_unnamed_addr #6 personality void ()* @rust_eh_personality.stub {
  %tmp.i.i.i.i.i.i = alloca i32, align 4
  %src.i.i.i = alloca i32, align 4
  %iter.i = alloca { i32, i32 }, align 4
  call void @llvm.dbg.declare(metadata { i32, i32 }* %iter.i, metadata !63, metadata !DIExpression()), !dbg !82
  call void @seahorn.fn.enter()
  %1 = bitcast { i32, i32 }* %iter.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1)
  call void @seahorn.fn.enter() #10
  %2 = call { i32, i32 } @verifier.nondet.1() #10
  call void @seahorn.fn.enter() #10
  call void @llvm.dbg.value(metadata i32 undef, metadata !83, metadata !DIExpression()) #10, !dbg !95
  call void @llvm.dbg.value(metadata i32 undef, metadata !83, metadata !DIExpression()) #10, !dbg !95
  %3 = insertvalue { i32, i32 } %2, i32 0, 0, !dbg !97
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %iter.i, i64 0, i32 0, !dbg !98
  store i32 0, i32* %4, align 4, !dbg !98
  %5 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %iter.i, i64 0, i32 1, !dbg !98
  store i32 1, i32* %5, align 4, !dbg !98
  br label %bb2.i, !dbg !99

bb2.i:                                            ; preds = %_ZN11seahorn_for1n17ha8cf2bf3ef74d91fE.exit.i, %0
  %6 = call i32 @verifier.nondet.2() #10
  %7 = call { i32, i32 } @verifier.nondet.1() #10
  call void @seahorn.fn.enter() #10
  call void @llvm.dbg.value(metadata { i32, i32 }* %iter.i, metadata !100, metadata !DIExpression()) #10, !dbg !128
  %_3.i.i = getelementptr inbounds { i32, i32 }, { i32, i32 }* %iter.i, i64 0, i32 0, !dbg !130
  %_4.i.i = getelementptr inbounds { i32, i32 }, { i32, i32 }* %iter.i, i64 0, i32 1, !dbg !131
  call void @seahorn.fn.enter() #10, !noalias !132
  call void @llvm.dbg.value(metadata i32* %_3.i.i, metadata !136, metadata !DIExpression()) #10, !dbg !148
  call void @llvm.dbg.value(metadata i32* %_4.i.i, metadata !147, metadata !DIExpression()) #10, !dbg !148
  %_3.i.i.i = load i32, i32* %_3.i.i, align 4, !dbg !150, !alias.scope !151, !noalias !152
  %_4.i.i.i = load i32, i32* %_4.i.i, align 4, !dbg !153, !alias.scope !152, !noalias !151
  %8 = icmp slt i32 %_3.i.i.i, %_4.i.i.i, !dbg !150
  br i1 %8, label %bb3.i.i, label %"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h5e9105c55bf80ceeE.exit.i", !dbg !154

bb3.i.i:                                          ; preds = %bb2.i
  %_7.i.i = getelementptr inbounds { i32, i32 }, { i32, i32 }* %iter.i, i64 0, i32 0, !dbg !155
  call void @seahorn.fn.enter() #10, !noalias !156
  call void @llvm.dbg.value(metadata i32* %_7.i.i, metadata !159, metadata !DIExpression()) #10, !dbg !168
  %9 = load i32, i32* %_7.i.i, align 4, !dbg !170, !alias.scope !156
  call void @seahorn.fn.enter() #10
  call void @llvm.dbg.value(metadata i32 %9, metadata !171, metadata !DIExpression()) #10, !dbg !178
  call void @llvm.dbg.value(metadata i64 1, metadata !177, metadata !DIExpression()) #10, !dbg !178
  call void @seahorn.fn.enter() #10
  call void @llvm.dbg.value(metadata i32 %9, metadata !180, metadata !DIExpression()) #10, !dbg !189
  call void @llvm.dbg.value(metadata i32 1, metadata !188, metadata !DIExpression()) #10, !dbg !189
  %10 = add nsw i32 %9, 1, !dbg !191
  call void @llvm.dbg.value(metadata i32 %10, metadata !124, metadata !DIExpression()) #10, !dbg !192
  %_10.i.i = getelementptr inbounds { i32, i32 }, { i32, i32 }* %iter.i, i64 0, i32 0, !dbg !193
  %11 = bitcast i32* %src.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %11) #10
  call void @seahorn.fn.enter() #10
  call void @llvm.dbg.value(metadata i32 %10, metadata !194, metadata !DIExpression()) #10, !dbg !203
  store i32 %10, i32* %src.i.i.i, align 4
  call void @llvm.dbg.value(metadata i32* %_10.i.i, metadata !202, metadata !DIExpression()) #10, !dbg !203
  call void @llvm.dbg.value(metadata i32* %src.i.i.i, metadata !194, metadata !DIExpression(DW_OP_deref)) #10, !dbg !203
  call void @seahorn.fn.enter() #10
  call void @llvm.dbg.value(metadata i32* %_10.i.i, metadata !205, metadata !DIExpression()) #10, !dbg !211
  call void @llvm.dbg.value(metadata i32* %src.i.i.i, metadata !210, metadata !DIExpression()) #10, !dbg !211
  call void @seahorn.fn.enter() #10
  call void @llvm.dbg.value(metadata i32* %_10.i.i, metadata !213, metadata !DIExpression()) #10, !dbg !224
  call void @llvm.dbg.value(metadata i32* %src.i.i.i, metadata !221, metadata !DIExpression()) #10, !dbg !224
  %12 = bitcast i32* %tmp.i.i.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %12) #10
  %13 = call i32 @verifier.nondet.2() #10
  call void @seahorn.fn.enter() #10
  call void @llvm.dbg.value(metadata i32* %_10.i.i, metadata !226, metadata !DIExpression()) #10, !dbg !244
  call void @llvm.dbg.value(metadata i32 undef, metadata !232, metadata !DIExpression()) #10, !dbg !246
  store i32 %13, i32* %tmp.i.i.i.i.i.i, align 4, !dbg !247
  call void @llvm.dbg.value(metadata i32* %tmp.i.i.i.i.i.i, metadata !248, metadata !DIExpression()) #10, !dbg !255
  call void @llvm.dbg.value(metadata i32* %tmp.i.i.i.i.i.i, metadata !257, metadata !DIExpression()) #10, !dbg !265
  call void @llvm.dbg.value(metadata i32* %tmp.i.i.i.i.i.i, metadata !232, metadata !DIExpression(DW_OP_deref)) #10, !dbg !246
  call void @seahorn.fn.enter() #10
  call void @llvm.dbg.value(metadata i32* %_10.i.i, metadata !267, metadata !DIExpression()) #10, !dbg !276
  call void @llvm.dbg.value(metadata i32* %tmp.i.i.i.i.i.i, metadata !274, metadata !DIExpression()) #10, !dbg !276
  call void @llvm.dbg.value(metadata i64 1, metadata !275, metadata !DIExpression()) #10, !dbg !276
  %14 = bitcast i32* %tmp.i.i.i.i.i.i to i8*, !dbg !278
  %15 = bitcast i32* %_10.i.i to i8*, !dbg !278
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %15, i64 4, i1 false) #10, !dbg !278
  %_7.i.i.i.i.i.i = load i32, i32* %tmp.i.i.i.i.i.i, align 4, !dbg !279
  call void @llvm.dbg.value(metadata i32 %_7.i.i.i.i.i.i, metadata !232, metadata !DIExpression()) #10, !dbg !246
  call void @llvm.dbg.value(metadata i32 %_7.i.i.i.i.i.i, metadata !280, metadata !DIExpression()) #10, !dbg !285
  call void @llvm.dbg.value(metadata i32 %_7.i.i.i.i.i.i, metadata !287, metadata !DIExpression()) #10, !dbg !292
  %16 = bitcast i32* %tmp.i.i.i.i.i.i to i8*, !dbg !294
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %16) #10, !dbg !294
  call void @llvm.dbg.value(metadata i32 %_7.i.i.i.i.i.i, metadata !222, metadata !DIExpression()) #10, !dbg !295
  call void @seahorn.fn.enter() #10
  call void @llvm.dbg.value(metadata i32* %src.i.i.i, metadata !267, metadata !DIExpression()) #10, !dbg !296
  call void @llvm.dbg.value(metadata i32* %_10.i.i, metadata !274, metadata !DIExpression()) #10, !dbg !296
  call void @llvm.dbg.value(metadata i64 1, metadata !275, metadata !DIExpression()) #10, !dbg !296
  %17 = bitcast i32* %_10.i.i to i8*, !dbg !298
  %18 = bitcast i32* %src.i.i.i to i8*, !dbg !298
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 4 %18, i64 4, i1 false) #10, !dbg !298
  call void @seahorn.fn.enter() #10
  call void @llvm.dbg.value(metadata i32* %src.i.i.i, metadata !299, metadata !DIExpression()) #10, !dbg !305
  call void @llvm.dbg.value(metadata i32 %_7.i.i.i.i.i.i, metadata !304, metadata !DIExpression()) #10, !dbg !305
  store i32 %_7.i.i.i.i.i.i, i32* %src.i.i.i, align 4, !dbg !307
  %19 = load i32, i32* %src.i.i.i, align 4, !dbg !308
  call void @llvm.dbg.value(metadata i32 %19, metadata !194, metadata !DIExpression()) #10, !dbg !203
  %20 = bitcast i32* %src.i.i.i to i8*, !dbg !309
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %20) #10, !dbg !309
  br label %"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h5e9105c55bf80ceeE.exit.i", !dbg !154

"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h5e9105c55bf80ceeE.exit.i": ; preds = %bb3.i.i, %bb2.i
  %.sroa.3.0.i.i = phi i32 [ %19, %bb3.i.i ], [ %6, %bb2.i ]
  %.sroa.0.0.i.i = phi i32 [ 1, %bb3.i.i ], [ 0, %bb2.i ], !dbg !128
  %21 = insertvalue { i32, i32 } %7, i32 %.sroa.0.0.i.i, 0, !dbg !310
  %switch.i = icmp eq i32 %.sroa.0.0.i.i, 0, !dbg !311
  br i1 %switch.i, label %bb4.i, label %bb6.i, !dbg !311

bb4.i:                                            ; preds = %"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h5e9105c55bf80ceeE.exit.i"
  call void @seahorn.fn.enter() #10
  call void @llvm.dbg.value(metadata i32 0, metadata !312, metadata !DIExpression()) #10, !dbg !317
  call void @seahorn.fn.enter() #10, !dbg !319
  call void @verifier.error() #10, !dbg !319
  unreachable

bb6.i:                                            ; preds = %"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h5e9105c55bf80ceeE.exit.i"
  call void @llvm.dbg.value(metadata i32 undef, metadata !72, metadata !DIExpression()) #10, !dbg !325
  call void @llvm.dbg.value(metadata i32 undef, metadata !69, metadata !DIExpression()) #10, !dbg !326
  call void @seahorn.fn.enter() #10
  call void @llvm.dbg.value(metadata i32 0, metadata !327, metadata !DIExpression()) #10, !dbg !332
  %22 = call i1 @llvm.expect.i1(i1 false, i1 false) #10, !dbg !334
  br i1 %22, label %panic.i.i, label %_ZN11seahorn_for1n17ha8cf2bf3ef74d91fE.exit.i, !dbg !334

panic.i.i:                                        ; preds = %bb6.i
  call void @seahorn.fn.enter() #10, !dbg !334
  call void @seahorn.fn.enter() #10, !dbg !335
  call void @seahorn.fn.enter() #10, !dbg !338
  call void @verifier.error() #10, !dbg !338
  unreachable

_ZN11seahorn_for1n17ha8cf2bf3ef74d91fE.exit.i:    ; preds = %bb6.i
  call void @seahorn.fn.enter() #10
  call void @llvm.dbg.value(metadata i32 0, metadata !340, metadata !DIExpression()) #10, !dbg !344
  %23 = call i32 @__VERIFIER_nondet_i32() #10, !dbg !346
  br label %bb2.i, !dbg !99
}

; Function Attrs: inaccessiblememonly nofree norecurse nounwind
declare void @verifier.assume(i1) #7

; Function Attrs: inaccessiblememonly nofree norecurse nounwind
declare void @verifier.assume.not(i1) #7

; Function Attrs: inaccessiblememonly nofree norecurse nounwind
declare void @seahorn.fail() #7

; Function Attrs: inaccessiblememonly nofree norecurse noreturn nounwind
declare void @verifier.error() #8

; Function Attrs: inaccessiblememonly
declare void @seahorn.fn.enter() local_unnamed_addr #9

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

declare { i32, i32 } @verifier.nondet.1()

declare i32 @verifier.nondet.2()

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

attributes #0 = { nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #1 = { norecurse nounwind nonlazybind readnone "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #2 = { nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind nonlazybind "probe-stack"="__rust_probestack" "target-cpu"="x86-64" "target-features"="-mmx,-sse,-sse2,-sse3,-ssse3,-sse4.1,-sse4.2,-3dnow,-3dnowa,-avx,-avx2" }
attributes #5 = { nounwind readnone willreturn }
attributes #6 = { "probe-stack"="__rust_probestack" }
attributes #7 = { inaccessiblememonly nofree norecurse nounwind }
attributes #8 = { inaccessiblememonly nofree norecurse noreturn nounwind }
attributes #9 = { inaccessiblememonly }
attributes #10 = { nounwind }

!llvm.ident = !{!0}
!llvm.module.flags = !{!1, !2, !3, !4, !5, !6}
!llvm.dbg.cu = !{!7, !41, !46}

!0 = !{!"clang version 10.0.0-4ubuntu1 "}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 1, !"EnableSplitLTOUnit", i32 0}
!3 = !{i32 7, !"PIC Level", i32 2}
!4 = !{i32 2, !"RtLibUseGOT", i32 1}
!5 = !{i32 7, !"PIE Level", i32 2}
!6 = !{i32 2, !"Debug Info Version", i32 3}
!7 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !8, producer: "clang LLVM (rustc version 1.46.0-dev)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !9, globals: !27)
!8 = !DIFile(filename: "src/main.rs", directory: "/home/sflur/workspace/rust-verification/rust-verification-tools/demos/bottlenecks/seahorn-for")
!9 = !{!10, !18}
!10 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Result", scope: !12, file: !11, baseType: !14, size: 8, align: 8, flags: DIFlagEnumClass, elements: !15)
!11 = !DIFile(filename: "<unknown>", directory: "")
!12 = !DINamespace(name: "result", scope: !13)
!13 = !DINamespace(name: "core", scope: null)
!14 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!15 = !{!16, !17}
!16 = !DIEnumerator(name: "Ok", value: 0)
!17 = !DIEnumerator(name: "Err", value: 1)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Alignment", scope: !19, file: !11, baseType: !14, size: 8, align: 8, flags: DIFlagEnumClass, elements: !22)
!19 = !DINamespace(name: "v1", scope: !20)
!20 = !DINamespace(name: "rt", scope: !21)
!21 = !DINamespace(name: "fmt", scope: !13)
!22 = !{!23, !24, !25, !26}
!23 = !DIEnumerator(name: "Left", value: 0)
!24 = !DIEnumerator(name: "Right", value: 1)
!25 = !DIEnumerator(name: "Center", value: 2)
!26 = !DIEnumerator(name: "Unknown", value: 3)
!27 = !{!28}
!28 = !DIGlobalVariableExpression(var: !29, expr: !DIExpression())
!29 = distinct !DIGlobalVariable(name: "vtable", scope: null, file: !11, type: !30, isLocal: true, isDefinition: true)
!30 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vtable", file: !11, align: 64, flags: DIFlagArtificial, elements: !31, vtableHolder: !32, identifier: "vtable")
!31 = !{}
!32 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "closure-0", scope: !33, file: !11, size: 64, align: 64, elements: !36, templateParams: !31, identifier: "794549e730505e17d94582117f8b3d60")
!33 = !DINamespace(name: "lang_start", scope: !34)
!34 = !DINamespace(name: "rt", scope: !35)
!35 = !DINamespace(name: "std", scope: null)
!36 = !{!37}
!37 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !32, file: !11, baseType: !38, size: 64, align: 64)
!38 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn()", baseType: !39, size: 64, align: 64, dwarfAddressSpace: 0)
!39 = !DISubroutineType(types: !40)
!40 = !{null}
!41 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !42, producer: "clang LLVM (rustc version 1.46.0-dev)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !9, globals: !43)
!42 = !DIFile(filename: "/home/rust-verification-tools/propverify/src/lib.rs", directory: "/home/rust-verification-tools/propverify")
!43 = !{!44}
!44 = !DIGlobalVariableExpression(var: !45, expr: !DIExpression())
!45 = distinct !DIGlobalVariable(name: "vtable", scope: null, file: !11, type: !30, isLocal: true, isDefinition: true)
!46 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !47, producer: "clang LLVM (rustc version 1.46.0-dev)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !48, globals: !54)
!47 = !DIFile(filename: "/home/rust-verification-tools/verification-annotations/src/lib.rs", directory: "/home/rust-verification-tools/verification-annotations")
!48 = !{!10, !18, !49}
!49 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AllocInit", scope: !50, file: !11, baseType: !14, size: 8, align: 8, flags: DIFlagEnumClass, elements: !51)
!50 = !DINamespace(name: "alloc", scope: !13)
!51 = !{!52, !53}
!52 = !DIEnumerator(name: "Uninitialized", value: 0)
!53 = !DIEnumerator(name: "Zeroed", value: 1)
!54 = !{!55, !57, !59, !61}
!55 = !DIGlobalVariableExpression(var: !56, expr: !DIExpression())
!56 = distinct !DIGlobalVariable(name: "vtable", scope: null, file: !11, type: !30, isLocal: true, isDefinition: true)
!57 = !DIGlobalVariableExpression(var: !58, expr: !DIExpression())
!58 = distinct !DIGlobalVariable(name: "vtable", scope: null, file: !11, type: !30, isLocal: true, isDefinition: true)
!59 = !DIGlobalVariableExpression(var: !60, expr: !DIExpression())
!60 = distinct !DIGlobalVariable(name: "vtable", scope: null, file: !11, type: !30, isLocal: true, isDefinition: true)
!61 = !DIGlobalVariableExpression(var: !62, expr: !DIExpression())
!62 = distinct !DIGlobalVariable(name: "vtable", scope: null, file: !11, type: !30, isLocal: true, isDefinition: true)
!63 = !DILocalVariable(name: "iter", scope: !64, file: !65, line: 5, type: !74, align: 4)
!64 = distinct !DILexicalBlock(scope: !66, file: !65, line: 5, column: 5)
!65 = !DIFile(filename: "src/main.rs", directory: "/home/sflur/workspace/rust-verification/rust-verification-tools/demos/bottlenecks/seahorn-for", checksumkind: CSK_MD5, checksum: "adbf4ebfe93589a174c10558f02ccb72")
!66 = distinct !DISubprogram(name: "test", linkageName: "_ZN11seahorn_for4test17he738694bf5f4429fE", scope: !67, file: !65, line: 4, type: !39, scopeLine: 4, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !7, templateParams: !31, retainedNodes: !68)
!67 = !DINamespace(name: "seahorn_for", scope: null)
!68 = !{!63, !69, !72}
!69 = !DILocalVariable(name: "__next", scope: !70, file: !65, line: 5, type: !71, align: 4)
!70 = distinct !DILexicalBlock(scope: !64, file: !65, line: 5, column: 14)
!71 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!72 = !DILocalVariable(name: "val", scope: !73, file: !65, line: 5, type: !71, align: 4)
!73 = distinct !DILexicalBlock(scope: !70, file: !65, line: 5, column: 9)
!74 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Range<i32>", scope: !75, file: !11, size: 64, align: 32, elements: !77, templateParams: !80, identifier: "4b98ab9dcc3f58447dd0508b9a4342bf")
!75 = !DINamespace(name: "range", scope: !76)
!76 = !DINamespace(name: "ops", scope: !13)
!77 = !{!78, !79}
!78 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !74, file: !11, baseType: !71, size: 32, align: 32)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !74, file: !11, baseType: !71, size: 32, align: 32, offset: 32)
!80 = !{!81}
!81 = !DITemplateTypeParameter(name: "Idx", type: !71)
!82 = !DILocation(line: 5, column: 14, scope: !64)
!83 = !DILocalVariable(name: "self", arg: 1, scope: !84, file: !85, line: 247, type: !74)
!84 = distinct !DISubprogram(name: "into_iter<core::ops::range::Range<i32>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h096615cd05205003E", scope: !86, file: !85, line: 247, type: !90, scopeLine: 247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !7, templateParams: !93, retainedNodes: !92)
!85 = !DIFile(filename: "/home/sflur/rust/src/libcore/iter/traits/collect.rs", directory: "", checksumkind: CSK_MD5, checksum: "ab5d815a7d940fadbe767a6e9304aef3")
!86 = !DINamespace(name: "{{impl}}", scope: !87)
!87 = !DINamespace(name: "collect", scope: !88)
!88 = !DINamespace(name: "traits", scope: !89)
!89 = !DINamespace(name: "iter", scope: !13)
!90 = !DISubroutineType(types: !91)
!91 = !{!74, !74}
!92 = !{!83}
!93 = !{!94}
!94 = !DITemplateTypeParameter(name: "I", type: !74)
!95 = !DILocation(line: 0, scope: !84, inlinedAt: !96)
!96 = distinct !DILocation(line: 5, column: 14, scope: !66)
!97 = !DILocation(line: 249, column: 6, scope: !84, inlinedAt: !96)
!98 = !DILocation(line: 5, column: 14, scope: !66)
!99 = !DILocation(line: 5, column: 5, scope: !64)
!100 = !DILocalVariable(name: "self", arg: 1, scope: !101, file: !102, line: 504, type: !122)
!101 = distinct !DISubprogram(name: "next<i32>", linkageName: "_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h5e9105c55bf80ceeE", scope: !103, file: !102, line: 504, type: !105, scopeLine: 504, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !7, templateParams: !126, retainedNodes: !123)
!102 = !DIFile(filename: "/home/sflur/rust/src/libcore/iter/range.rs", directory: "", checksumkind: CSK_MD5, checksum: "f54a7b8e68d1fef6127b42e736393809")
!103 = !DINamespace(name: "{{impl}}", scope: !104)
!104 = !DINamespace(name: "range", scope: !89)
!105 = !DISubroutineType(types: !106)
!106 = !{!107, !122}
!107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Option<i32>", scope: !108, file: !11, size: 64, align: 32, elements: !109, identifier: "22866a387161564b492aad3624b55695")
!108 = !DINamespace(name: "option", scope: !13)
!109 = !{!110}
!110 = distinct !DICompositeType(tag: DW_TAG_variant_part, scope: !108, file: !11, size: 64, align: 32, elements: !111, templateParams: !114, identifier: "22866a387161564b492aad3624b55695_variant_part", discriminator: !120)
!111 = !{!112, !116}
!112 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !110, file: !11, baseType: !113, size: 64, align: 32, extraData: i64 0)
!113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !107, file: !11, size: 64, align: 32, elements: !31, templateParams: !114, identifier: "22866a387161564b492aad3624b55695::None")
!114 = !{!115}
!115 = !DITemplateTypeParameter(name: "T", type: !71)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !110, file: !11, baseType: !117, size: 64, align: 32, extraData: i64 1)
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !107, file: !11, size: 64, align: 32, elements: !118, templateParams: !114, identifier: "22866a387161564b492aad3624b55695::Some")
!118 = !{!119}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !117, file: !11, baseType: !71, size: 32, align: 32, offset: 32)
!120 = !DIDerivedType(tag: DW_TAG_member, scope: !108, file: !11, baseType: !121, size: 32, align: 32, flags: DIFlagArtificial)
!121 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::ops::range::Range<i32>", baseType: !74, size: 64, align: 64, dwarfAddressSpace: 0)
!123 = !{!100, !124}
!124 = !DILocalVariable(name: "n", scope: !125, file: !102, line: 507, type: !71, align: 4)
!125 = distinct !DILexicalBlock(scope: !101, file: !102, line: 507, column: 13)
!126 = !{!127}
!127 = !DITemplateTypeParameter(name: "A", type: !71)
!128 = !DILocation(line: 0, scope: !101, inlinedAt: !129)
!129 = distinct !DILocation(line: 5, column: 14, scope: !70)
!130 = !DILocation(line: 505, column: 12, scope: !101, inlinedAt: !129)
!131 = !DILocation(line: 505, column: 25, scope: !101, inlinedAt: !129)
!132 = !{!133, !135}
!133 = distinct !{!133, !134, !"_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$i32$GT$2lt17h1a280bfba5b373e6E: %self"}
!134 = distinct !{!134, !"_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$i32$GT$2lt17h1a280bfba5b373e6E"}
!135 = distinct !{!135, !134, !"_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$i32$GT$2lt17h1a280bfba5b373e6E: %other"}
!136 = !DILocalVariable(name: "self", arg: 1, scope: !137, file: !138, line: 1136, type: !145)
!137 = distinct !DISubprogram(name: "lt", linkageName: "_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$i32$GT$2lt17h1a280bfba5b373e6E", scope: !139, file: !138, line: 1136, type: !142, scopeLine: 1136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !7, templateParams: !31, retainedNodes: !146)
!138 = !DIFile(filename: "/home/sflur/rust/src/libcore/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "edbdeae457543071a1989a77b61d8881")
!139 = !DINamespace(name: "{{impl}}", scope: !140)
!140 = !DINamespace(name: "impls", scope: !141)
!141 = !DINamespace(name: "cmp", scope: !13)
!142 = !DISubroutineType(types: !143)
!143 = !{!144, !145, !145}
!144 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!145 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&i32", baseType: !71, size: 64, align: 64, dwarfAddressSpace: 0)
!146 = !{!136, !147}
!147 = !DILocalVariable(name: "other", arg: 2, scope: !137, file: !138, line: 1136, type: !145)
!148 = !DILocation(line: 0, scope: !137, inlinedAt: !149)
!149 = distinct !DILocation(line: 505, column: 12, scope: !101, inlinedAt: !129)
!150 = !DILocation(line: 1136, column: 52, scope: !137, inlinedAt: !149)
!151 = !{!133}
!152 = !{!135}
!153 = !DILocation(line: 1136, column: 62, scope: !137, inlinedAt: !149)
!154 = !DILocation(line: 505, column: 9, scope: !101, inlinedAt: !129)
!155 = !DILocation(line: 507, column: 54, scope: !101, inlinedAt: !129)
!156 = !{!157}
!157 = distinct !{!157, !158, !"_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$i32$GT$5clone17hb1e3f4bc890d7bd2E: %self"}
!158 = distinct !{!158, !"_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$i32$GT$5clone17hb1e3f4bc890d7bd2E"}
!159 = !DILocalVariable(name: "self", arg: 1, scope: !160, file: !161, line: 184, type: !145)
!160 = distinct !DISubprogram(name: "clone", linkageName: "_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$i32$GT$5clone17hb1e3f4bc890d7bd2E", scope: !162, file: !161, line: 184, type: !165, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !7, templateParams: !31, retainedNodes: !167)
!161 = !DIFile(filename: "/home/sflur/rust/src/libcore/clone.rs", directory: "", checksumkind: CSK_MD5, checksum: "98c9dc6319acf64a993b20287d880fcd")
!162 = !DINamespace(name: "{{impl}}", scope: !163)
!163 = !DINamespace(name: "impls", scope: !164)
!164 = !DINamespace(name: "clone", scope: !13)
!165 = !DISubroutineType(types: !166)
!166 = !{!71, !145}
!167 = !{!159}
!168 = !DILocation(line: 0, scope: !160, inlinedAt: !169)
!169 = distinct !DILocation(line: 507, column: 54, scope: !101, inlinedAt: !129)
!170 = !DILocation(line: 185, column: 25, scope: !160, inlinedAt: !169)
!171 = !DILocalVariable(name: "start", arg: 1, scope: !172, file: !102, line: 191, type: !71)
!172 = distinct !DISubprogram(name: "forward_unchecked", linkageName: "_ZN47_$LT$i32$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h50635a852dbdbcffE", scope: !103, file: !102, line: 191, type: !173, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !7, templateParams: !31, retainedNodes: !176)
!173 = !DISubroutineType(types: !174)
!174 = !{!71, !71, !175}
!175 = !DIBasicType(name: "usize", size: 64, encoding: DW_ATE_unsigned)
!176 = !{!171, !177}
!177 = !DILocalVariable(name: "n", arg: 2, scope: !172, file: !102, line: 191, type: !175)
!178 = !DILocation(line: 0, scope: !172, inlinedAt: !179)
!179 = distinct !DILocation(line: 507, column: 30, scope: !101, inlinedAt: !129)
!180 = !DILocalVariable(name: "self", arg: 1, scope: !181, file: !182, line: 780, type: !71)
!181 = distinct !DISubprogram(name: "unchecked_add", linkageName: "_ZN4core3num21_$LT$impl$u20$i32$GT$13unchecked_add17h381ad3c68f040fa1E", scope: !183, file: !182, line: 780, type: !185, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !7, templateParams: !31, retainedNodes: !187)
!182 = !DIFile(filename: "/home/sflur/rust/src/libcore/num/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "b610d63e687c1bb61890b7290628f313")
!183 = !DINamespace(name: "{{impl}}", scope: !184)
!184 = !DINamespace(name: "num", scope: !13)
!185 = !DISubroutineType(types: !186)
!186 = !{!71, !71, !71}
!187 = !{!180, !188}
!188 = !DILocalVariable(name: "rhs", arg: 2, scope: !181, file: !182, line: 780, type: !71)
!189 = !DILocation(line: 0, scope: !181, inlinedAt: !190)
!190 = distinct !DILocation(line: 193, column: 22, scope: !172, inlinedAt: !179)
!191 = !DILocation(line: 783, column: 26, scope: !181, inlinedAt: !190)
!192 = !DILocation(line: 0, scope: !125, inlinedAt: !129)
!193 = !DILocation(line: 508, column: 31, scope: !125, inlinedAt: !129)
!194 = !DILocalVariable(name: "src", arg: 2, scope: !195, file: !196, line: 814, type: !71)
!195 = distinct !DISubprogram(name: "replace<i32>", linkageName: "_ZN4core3mem7replace17hc742f7312268a56aE", scope: !197, file: !196, line: 814, type: !198, scopeLine: 814, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !7, templateParams: !114, retainedNodes: !201)
!196 = !DIFile(filename: "/home/sflur/rust/src/libcore/mem/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "9308af0e5a7ab6542e946123e14ef014")
!197 = !DINamespace(name: "mem", scope: !13)
!198 = !DISubroutineType(types: !199)
!199 = !{!71, !200, !71}
!200 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut i32", baseType: !71, size: 64, align: 64, dwarfAddressSpace: 0)
!201 = !{!202, !194}
!202 = !DILocalVariable(name: "dest", arg: 1, scope: !195, file: !196, line: 814, type: !200)
!203 = !DILocation(line: 0, scope: !195, inlinedAt: !204)
!204 = distinct !DILocation(line: 508, column: 18, scope: !125, inlinedAt: !129)
!205 = !DILocalVariable(name: "x", arg: 1, scope: !206, file: !196, line: 686, type: !200)
!206 = distinct !DISubprogram(name: "swap<i32>", linkageName: "_ZN4core3mem4swap17h8865bec445c99d55E", scope: !197, file: !196, line: 686, type: !207, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !7, templateParams: !114, retainedNodes: !209)
!207 = !DISubroutineType(types: !208)
!208 = !{null, !200, !200}
!209 = !{!205, !210}
!210 = !DILocalVariable(name: "y", arg: 2, scope: !206, file: !196, line: 686, type: !200)
!211 = !DILocation(line: 0, scope: !206, inlinedAt: !212)
!212 = distinct !DILocation(line: 815, column: 5, scope: !195, inlinedAt: !204)
!213 = !DILocalVariable(name: "x", arg: 1, scope: !214, file: !215, line: 449, type: !219)
!214 = distinct !DISubprogram(name: "swap_nonoverlapping_one<i32>", linkageName: "_ZN4core3ptr23swap_nonoverlapping_one17h85a309056015a120E", scope: !216, file: !215, line: 449, type: !217, scopeLine: 449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !7, templateParams: !114, retainedNodes: !220)
!215 = !DIFile(filename: "/home/sflur/rust/src/libcore/ptr/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "b0ff59056d9429f270152364d6f9dea4")
!216 = !DINamespace(name: "ptr", scope: !13)
!217 = !DISubroutineType(types: !218)
!218 = !{null, !219, !219}
!219 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut i32", baseType: !71, size: 64, align: 64, dwarfAddressSpace: 0)
!220 = !{!213, !221, !222}
!221 = !DILocalVariable(name: "y", arg: 2, scope: !214, file: !215, line: 449, type: !219)
!222 = !DILocalVariable(name: "z", scope: !223, file: !215, line: 456, type: !71, align: 4)
!223 = distinct !DILexicalBlock(scope: !214, file: !215, line: 456, column: 13)
!224 = !DILocation(line: 0, scope: !214, inlinedAt: !225)
!225 = distinct !DILocation(line: 690, column: 9, scope: !206, inlinedAt: !212)
!226 = !DILocalVariable(name: "src", arg: 1, scope: !227, file: !215, line: 692, type: !230)
!227 = distinct !DISubprogram(name: "read<i32>", linkageName: "_ZN4core3ptr4read17h962d38c081b5fa8bE", scope: !216, file: !215, line: 692, type: !228, scopeLine: 692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !7, templateParams: !114, retainedNodes: !231)
!228 = !DISubroutineType(types: !229)
!229 = !{!71, !230}
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const i32", baseType: !71, size: 64, align: 64, dwarfAddressSpace: 0)
!231 = !{!226, !232}
!232 = !DILocalVariable(name: "tmp", scope: !233, file: !215, line: 694, type: !234, align: 4)
!233 = distinct !DILexicalBlock(scope: !227, file: !215, line: 694, column: 5)
!234 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<i32>", scope: !235, file: !11, size: 32, align: 32, elements: !236, templateParams: !114, identifier: "f5f2a76d01f77bcfd240688ecce7e232")
!235 = !DINamespace(name: "maybe_uninit", scope: !197)
!236 = !{!237, !239}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !234, file: !11, baseType: !238, align: 8)
!238 = !DIBasicType(name: "()", encoding: DW_ATE_unsigned)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !234, file: !11, baseType: !240, size: 32, align: 32)
!240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<i32>", scope: !241, file: !11, size: 32, align: 32, elements: !242, templateParams: !114, identifier: "7bf4e12c85bac4adcf2df2837774e00b")
!241 = !DINamespace(name: "manually_drop", scope: !197)
!242 = !{!243}
!243 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !240, file: !11, baseType: !71, size: 32, align: 32)
!244 = !DILocation(line: 0, scope: !227, inlinedAt: !245)
!245 = distinct !DILocation(line: 456, column: 21, scope: !214, inlinedAt: !225)
!246 = !DILocation(line: 0, scope: !233, inlinedAt: !245)
!247 = !DILocation(line: 694, column: 19, scope: !227, inlinedAt: !245)
!248 = !DILocalVariable(name: "self", arg: 1, scope: !249, file: !250, line: 446, type: !253)
!249 = distinct !DISubprogram(name: "as_mut_ptr<i32>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h4cc84af77470bc8dE", scope: !234, file: !250, line: 446, type: !251, scopeLine: 446, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !7, templateParams: !114, retainedNodes: !254)
!250 = !DIFile(filename: "/home/sflur/rust/src/libcore/mem/maybe_uninit.rs", directory: "", checksumkind: CSK_MD5, checksum: "9aa3ae082fc2bdd5f978a6ce8b36d27f")
!251 = !DISubroutineType(types: !252)
!252 = !{!219, !253}
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<i32>", baseType: !234, size: 64, align: 64, dwarfAddressSpace: 0)
!254 = !{!248}
!255 = !DILocation(line: 0, scope: !249, inlinedAt: !256)
!256 = distinct !DILocation(line: 702, column: 34, scope: !233, inlinedAt: !245)
!257 = !DILocalVariable(name: "self", arg: 1, scope: !258, file: !259, line: 176, type: !263)
!258 = distinct !DISubprogram(name: "deref_mut<i32>", linkageName: "_ZN94_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17ha47fed3bb00ff69aE", scope: !260, file: !259, line: 176, type: !261, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !7, templateParams: !114, retainedNodes: !264)
!259 = !DIFile(filename: "/home/sflur/rust/src/libcore/mem/manually_drop.rs", directory: "", checksumkind: CSK_MD5, checksum: "0febc6eef80fb65b0bf766cc432cb2cf")
!260 = !DINamespace(name: "{{impl}}", scope: !241)
!261 = !DISubroutineType(types: !262)
!262 = !{!200, !263}
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::manually_drop::ManuallyDrop<i32>", baseType: !240, size: 64, align: 64, dwarfAddressSpace: 0)
!264 = !{!257}
!265 = !DILocation(line: 0, scope: !258, inlinedAt: !266)
!266 = distinct !DILocation(line: 447, column: 23, scope: !249, inlinedAt: !256)
!267 = !DILocalVariable(name: "src", arg: 1, scope: !268, file: !269, line: 2118, type: !230)
!268 = distinct !DISubprogram(name: "copy_nonoverlapping<i32>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17h4229e21c76ac2433E", scope: !270, file: !269, line: 2118, type: !271, scopeLine: 2118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !7, templateParams: !114, retainedNodes: !273)
!269 = !DIFile(filename: "/home/sflur/rust/src/libcore/intrinsics.rs", directory: "", checksumkind: CSK_MD5, checksum: "a51a10ba401247347921588be349c7b5")
!270 = !DINamespace(name: "intrinsics", scope: !13)
!271 = !DISubroutineType(types: !272)
!272 = !{null, !230, !219, !175}
!273 = !{!267, !274, !275}
!274 = !DILocalVariable(name: "dst", arg: 2, scope: !268, file: !269, line: 2118, type: !219)
!275 = !DILocalVariable(name: "count", arg: 3, scope: !268, file: !269, line: 2118, type: !175)
!276 = !DILocation(line: 0, scope: !268, inlinedAt: !277)
!277 = distinct !DILocation(line: 702, column: 9, scope: !233, inlinedAt: !245)
!278 = !DILocation(line: 2134, column: 14, scope: !268, inlinedAt: !277)
!279 = !DILocation(line: 703, column: 9, scope: !233, inlinedAt: !245)
!280 = !DILocalVariable(name: "self", arg: 1, scope: !281, file: !250, line: 496, type: !234)
!281 = distinct !DISubprogram(name: "assume_init<i32>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17hfd4843421f8edf54E", scope: !234, file: !250, line: 496, type: !282, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !7, templateParams: !114, retainedNodes: !284)
!282 = !DISubroutineType(types: !283)
!283 = !{!71, !234}
!284 = !{!280}
!285 = !DILocation(line: 0, scope: !281, inlinedAt: !286)
!286 = distinct !DILocation(line: 703, column: 9, scope: !233, inlinedAt: !245)
!287 = !DILocalVariable(name: "slot", arg: 1, scope: !288, file: !259, line: 100, type: !240)
!288 = distinct !DISubprogram(name: "into_inner<i32>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h086d3fb445b32e0fE", scope: !240, file: !259, line: 100, type: !289, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !7, templateParams: !114, retainedNodes: !291)
!289 = !DISubroutineType(types: !290)
!290 = !{!71, !240}
!291 = !{!287}
!292 = !DILocation(line: 0, scope: !288, inlinedAt: !293)
!293 = distinct !DILocation(line: 501, column: 13, scope: !281, inlinedAt: !286)
!294 = !DILocation(line: 705, column: 2, scope: !227, inlinedAt: !245)
!295 = !DILocation(line: 0, scope: !223, inlinedAt: !225)
!296 = !DILocation(line: 0, scope: !268, inlinedAt: !297)
!297 = distinct !DILocation(line: 457, column: 13, scope: !223, inlinedAt: !225)
!298 = !DILocation(line: 2134, column: 14, scope: !268, inlinedAt: !297)
!299 = !DILocalVariable(name: "dst", arg: 1, scope: !300, file: !215, line: 895, type: !219)
!300 = distinct !DISubprogram(name: "write<i32>", linkageName: "_ZN4core3ptr5write17h02c402a0d445957fE", scope: !216, file: !215, line: 895, type: !301, scopeLine: 895, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !7, templateParams: !114, retainedNodes: !303)
!301 = !DISubroutineType(types: !302)
!302 = !{null, !219, !71}
!303 = !{!299, !304}
!304 = !DILocalVariable(name: "src", arg: 2, scope: !300, file: !215, line: 895, type: !71)
!305 = !DILocation(line: 0, scope: !300, inlinedAt: !306)
!306 = distinct !DILocation(line: 458, column: 13, scope: !223, inlinedAt: !225)
!307 = !DILocation(line: 901, column: 51, scope: !300, inlinedAt: !306)
!308 = !DILocation(line: 816, column: 5, scope: !195, inlinedAt: !204)
!309 = !DILocation(line: 817, column: 2, scope: !195, inlinedAt: !204)
!310 = !DILocation(line: 512, column: 6, scope: !101, inlinedAt: !129)
!311 = !DILocation(line: 5, column: 9, scope: !70)
!312 = !DILocalVariable(name: "x", arg: 1, scope: !313, file: !65, line: 17, type: !71)
!313 = distinct !DISubprogram(name: "is_one", linkageName: "_ZN11seahorn_for6is_one17h167abd07ea6b215cE", scope: !67, file: !65, line: 17, type: !314, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !7, templateParams: !31, retainedNodes: !316)
!314 = !DISubroutineType(types: !315)
!315 = !{!144, !71}
!316 = !{!312}
!317 = !DILocation(line: 0, scope: !313, inlinedAt: !318)
!318 = distinct !DILocation(line: 10, column: 8, scope: !66)
!319 = !DILocation(line: 33, column: 14, scope: !320, inlinedAt: !324)
!320 = distinct !DISubprogram(name: "abort", linkageName: "_ZN24verification_annotations7seahorn5abort17h7489d991fb938394E", scope: !322, file: !321, line: 32, type: !39, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !46, templateParams: !31, retainedNodes: !31)
!321 = !DIFile(filename: "/home/rust-verification-tools/verification-annotations/src/seahorn.rs", directory: "/home/rust-verification-tools/verification-annotations", checksumkind: CSK_MD5, checksum: "eb28ee15fe42acc8bb7e1b95034b024a")
!322 = !DINamespace(name: "seahorn", scope: !323)
!323 = !DINamespace(name: "verification_annotations", scope: null)
!324 = distinct !DILocation(line: 14, column: 5, scope: !66)
!325 = !DILocation(line: 0, scope: !73)
!326 = !DILocation(line: 0, scope: !70)
!327 = !DILocalVariable(name: "n", arg: 1, scope: !328, file: !65, line: 21, type: !71)
!328 = distinct !DISubprogram(name: "n", linkageName: "_ZN11seahorn_for1n17ha8cf2bf3ef74d91fE", scope: !67, file: !65, line: 21, type: !329, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !7, templateParams: !31, retainedNodes: !331)
!329 = !DISubroutineType(types: !330)
!330 = !{!71, !71}
!331 = !{!327}
!332 = !DILocation(line: 0, scope: !328, inlinedAt: !333)
!333 = distinct !DILocation(line: 6, column: 9, scope: !70)
!334 = !DILocation(line: 22, column: 5, scope: !328, inlinedAt: !333)
!335 = !DILocation(line: 25, column: 5, scope: !336, inlinedAt: !337)
!336 = distinct !DISubprogram(name: "spanic", scope: !322, file: !321, line: 24, type: !39, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !46, templateParams: !31, retainedNodes: !31)
!337 = distinct !DILocation(line: 22, column: 5, scope: !328, inlinedAt: !333)
!338 = !DILocation(line: 33, column: 14, scope: !320, inlinedAt: !339)
!339 = distinct !DILocation(line: 25, column: 5, scope: !336, inlinedAt: !337)
!340 = !DILocalVariable(name: "self", arg: 1, scope: !341, file: !321, line: 94, type: !71)
!341 = distinct !DISubprogram(name: "verifier_nondet", linkageName: "_ZN24verification_annotations7seahorn82_$LT$impl$u20$verification_annotations..traits..VerifierNonDet$u20$for$u20$i32$GT$15verifier_nondet17h010765752bc12325E", scope: !342, file: !321, line: 94, type: !329, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !46, templateParams: !31, retainedNodes: !343)
!342 = !DINamespace(name: "{{impl}}", scope: !322)
!343 = !{!340}
!344 = !DILocation(line: 0, scope: !341, inlinedAt: !345)
!345 = distinct !DILocation(line: 7, column: 9, scope: !70)
!346 = !DILocation(line: 95, column: 26, scope: !341, inlinedAt: !345)
